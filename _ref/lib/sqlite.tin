#nop lib/sqlite.tin;

/*
    Author:         Nathan Farrar
    Email:          nathan.farrar@gmail.com
    Website:        http://github.com/nfarrar/TinNM/

    Dependencies:   None

    Description
    -----------
    This is a SQLite wrapper I found at the link referenced below. I haver not
    yet integrated this into TinNM, but plan to use this for indexing and
    searching items and npcs.

    References
    ----------
    SQLite Wrapper:                     http://tintin.sourceforge.net/board/viewtopic.php?t=2018
*/

#alias {std_db_submit} {
    #if {"%0" != ""} {
        #nop generate #format command and execute it;
        #var __dbFormat {#format {__db[Command]} {%3}};
        #var __db[argc] 0;
        #foreach {%0} {__db[Temp]} {
            #math __db[argc] {${__db[argc]} + 1};
            #if {${__db[argc]} > 3} {
                #replace {__db[Temp]} {"} {'};
                #replace {__db[Temp]} {'} {''};
                #if {"${__db[Temp]}" != ""} {
                    #var {__dbFormat} {${__dbFormat} {${__db[Temp]}}};
                };
            };
        };
        ${__dbFormat};
        #unvar __dbFormat;

        #nop Call sqlite3 and make actual DB call;
        #var __db[Call] {sqlite3 -header %2 "${__db[Command]}"};
        #script {__db[Res]} {${__db[Call]}};
        #nop Replace pipe | field serpeators with semicolons for the #list command;
        #forall {${__db[Res]}} {
            #replace __db[Res][&0] {|} {;};
        };
        #nop build array off of __dbRes;
        #var __db[Out] {};
        #nop Build list of fields off the header;
        #list __db[fields] create {${__db[Res][1]}};
        #list __db[Res] delete 1;
        #nop Process each returned record;
        #foreach {${__db[Res][]}} {__db[recordIdx]} {
            #list __db[record] create {${__db[Res][${__db[recordIdx]}]}};
            #forall {${__db[fields][]}} {
                #var __db[Out][${__db[recordIdx]}][${__db[fields][&0]}] {${__db[record][&0]}};
            };
        };
        #nop Save results in the desired var and cleanup local vars;
        #var {%1} {${__db[Out]}};
        #unvar __db;
    };
};
